static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: udagram-api
              domains: ["*"]
              routes:
              - match:
                  prefix: "/api/v0/feed"
                route:
                  cluster: feed-api
              - match:
                  prefix: "/api/v0/users"
                route:
                  cluster: users-api

  clusters:
  - name: feed-api
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    http_protocol_options: {}
    load_assignment:
      cluster_name: feed-api
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: feed-api-svc
                port_value: 8080
  - name: users-api
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    http_protocol_options: {}
    load_assignment:
      cluster_name: users-api
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: users-api-svc
                port_value: 8080
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        envoy:
          resource_limits:
            listener:
              example_listener_name:
                connection_limit: 10000
